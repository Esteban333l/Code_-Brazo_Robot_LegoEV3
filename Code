#!/usr/bin/env pybricks-micropython
from pybricks.hubs import EV3Brick
from pybricks.ev3devices import Motor, TouchSensor, ColorSensor
from pybricks.parameters import Port, Stop, Button, Color
from pybricks.tools import wait

Inicializar ladrillo
ev3 = EV3Brick()

Motores
motor_base = Motor(Port.C)
motor_brazo = Motor(Port.B)
motor_garra = Motor(Port.A)

Sensores
sensor_base = TouchSensor(Port.S1)
sensor_brazo = ColorSensor(Port.S3)

Estado
garra_cerrada = False
esperando_liberar_centro = False
garra_en_movimiento = False

Ángulo límite izquierdo (por ejemplo, -180 grados)
LIMITE_IZQUIERDO = -6

Bucle principal
while True:
    botones = ev3.buttons.pressed()

    Motor base
    if Button.LEFT in botones:
        if motor_base.angle() > LIMITE_IZQUIERDO:
            motor_base.run(-200)
        else:
            motor_base.stop(Stop.HOLD)
    elif Button.RIGHT in botones:
        if not sensor_base.pressed():
            motor_base.run(200)
        else:
            motor_base.stop(Stop.HOLD)
    else:
        motor_base.stop(Stop.HOLD)

    Movimiento del brazo (se detiene si detecta blanco)
    if Button.UP in botones:
        if sensor_brazo.color() != Color.WHITE:
            motor_brazo.run(-200)
        else:
            motor_brazo.stop(Stop.HOLD)
    elif Button.DOWN in botones:
        motor_brazo.run(200)
    else:
        motor_brazo.stop(Stop.HOLD)

    Garra
    if Button.CENTER in botones:
        if not esperando_liberar_centro and not garra_en_movimiento:
            if garra_cerrada:
                motor_garra.run_time(200, 500, Stop.HOLD, wait=False)
                garra_cerrada = False
            else:
                motor_garra.run_time(-200, 500, Stop.HOLD, wait=False)
                garra_cerrada = True
            garra_en_movimiento = True
            esperando_liberar_centro = True
    else:
        esperando_liberar_centro = False
        garra_en_movimiento = False

    wait(10)
